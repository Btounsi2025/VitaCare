"""
Skin Care Recommendation System
This application provides personalized skin care recommendations using AI.
"""

import streamlit as st
import os
from langchain_openai import ChatOpenAI
from langchain.prompts import ChatPromptTemplate
from langchain.chains import LLMChain
from langchain.output_parsers import ResponseSchema, StructuredOutputParser
from typing import List, Dict

# Configure page
st.set_page_config(
    page_title="Conseiller en Soins de la Peau",
    layout="wide"
)

# Define the response schemas
response_schemas = [
    ResponseSchema(
        name="diagnostic",
        description="Un diagnostic d√©taill√© des probl√®mes et besoins de la peau en fran√ßais"
    ),
    ResponseSchema(
        name="ingredients",
        description="Une liste des ingr√©dients cl√©s recommand√©s pour traiter les probl√®mes de peau"
    ),
    ResponseSchema(
        name="routine_jour",
        description="Une routine de soins d√©taill√©e pour le jour"
    ),
    ResponseSchema(
        name="routine_nuit",
        description="Une routine de soins d√©taill√©e pour la nuit"
    )
]

# Initialize the output parser
output_parser = StructuredOutputParser.from_response_schemas(response_schemas)

# Create the prompt template
TEMPLATE = """Vous √™tes un expert dermatologue sp√©cialis√© dans les soins de la peau.

Information sur le patient:
Type de peau: {skin_type}
Probl√®mes de peau: {skin_concerns}
Informations suppl√©mentaires: {additional_info}

Veuillez fournir une analyse d√©taill√©e et des recommandations personnalis√©es.

{format_instructions}

Assurez-vous que vos recommandations sont:
1. Sp√©cifiques au type de peau et aux probl√®mes mentionn√©s
2. R√©alistes et applicables au quotidien
3. Expliqu√©es de mani√®re claire et accessible
4. Bas√©es sur des ingr√©dients reconnus en dermatologie
"""

prompt = ChatPromptTemplate.from_template(TEMPLATE)

class SkinCareAdvisor:
    def __init__(self):
        """Initialize the skin care advisor with OpenAI model"""
        self.llm = ChatOpenAI(
            model="gpt-4",
            temperature=0,
            max_tokens=None,
            timeout=None,
            max_retries=2,
            api_key=st.secrets["openai"]["api_key"]
        )
        self.chain = LLMChain(
            llm=self.llm,
            prompt=prompt
        )
    
    def get_recommendations(self, skin_type: str, skin_concerns: List[str], additional_info: str) -> Dict:
        """Get personalized skin care recommendations"""
        try:
            # Format the concerns list
            concerns_str = ", ".join(skin_concerns) if skin_concerns else "Aucun probl√®me sp√©cifique mentionn√©"
            
            # Get format instructions
            format_instructions = output_parser.get_format_instructions()
            
            # Get the response
            response = self.chain.invoke({
                "skin_type": skin_type,
                "skin_concerns": concerns_str,
                "additional_info": additional_info,
                "format_instructions": format_instructions
            })
            
            # Parse the response
            parsed_response = output_parser.parse(response['text'])
            return parsed_response
            
        except Exception as e:
            st.error(f"Une erreur s'est produite: {str(e)}")
            return None

def create_sidebar():
    """Create and handle sidebar elements"""
    with st.sidebar:
        st.title("√Ä propos")
        st.write("""
        Ce conseiller en soins de la peau utilise l'intelligence artificielle pour fournir 
        des recommandations personnalis√©es bas√©es sur vos besoins sp√©cifiques.
        """)
        
        st.markdown("---")
        st.markdown("### Comment √ßa marche?")
        st.write("""
        1. S√©lectionnez votre type de peau
        2. Indiquez vos pr√©occupations
        3. Ajoutez des informations suppl√©mentaires
        4. Obtenez des recommandations personnalis√©es
        """)

def main():
    create_sidebar()
    
    st.title("Conseiller en Soins de la Peau")
    st.write("Obtenez des recommandations personnalis√©es pour votre routine de soins.")
    
    # Initialize the advisor
    advisor = SkinCareAdvisor()
    
    # Create the main form
    with st.form("skin_care_form"):
        col1, col2 = st.columns(2)
        
        with col1:
            skin_type = st.selectbox(
                "Quel est votre type de peau?",
                ["Normal", "Sec", "Gras", "Mixte", "Sensible"],
                help="Choisissez le type qui correspond le mieux √† votre peau"
            )
        
        with col2:
            skin_concerns = st.multiselect(
                "Quelles sont vos pr√©occupations principales?",
                [
                    "Acn√©", "Rides", "Taches brunes", 
                    "Rougeurs", "Pores dilat√©s", "D√©shydratation",
                    "Teint terne", "Sensibilit√©", "Cicatrices"
                ],
                help="S√©lectionnez une ou plusieurs pr√©occupations"
            )
        
        additional_info = st.text_area(
            "Informations suppl√©mentaires",
            placeholder="Ex: allergies, pr√©f√©rences pour certains ingr√©dients, routine actuelle...",
            help="Ajoutez toute information pertinente pour des recommandations plus pr√©cises"
        )
        
        submitted = st.form_submit_button("Obtenir mes recommandations")
    
    if submitted:
        with st.spinner("Analyse en cours..."):
            recommendations = advisor.get_recommendations(
                skin_type, 
                skin_concerns, 
                additional_info
            )
            
            if recommendations:
                # Display recommendations in a structured way
                st.success("Analyse compl√©t√©e! Voici vos recommandations personnalis√©es:")
                
                # Diagnostic
                st.markdown("### üîç Diagnostic")
                st.markdown(recommendations["diagnostic"])
                
                # Ingredients
                st.markdown("### üß™ Ingr√©dients Recommand√©s")
                st.markdown(recommendations["ingredients"])
                
                # Daily Routine
                st.markdown("### ‚òÄÔ∏è Routine du Jour")
                st.markdown(recommendations["routine_jour"])
                
                # Night Routine
                st.markdown("### üåô Routine du Nuit")
                st.markdown(recommendations["routine_nuit"])
                
                # Add a note
                st.info("""
                üí° Note: Ces recommandations sont g√©n√©r√©es par IA √† titre informatif. 
                Pour des probl√®mes de peau sp√©cifiques, consultez un dermatologue.
                """)

if __name__ == "__main__":
    main() 